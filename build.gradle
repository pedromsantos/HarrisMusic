plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.2.10'
    id 'org.jlleitschuh.gradle.ktlint' version '13.1.0'
    id 'jacoco'
    id 'maven-publish'
    id 'java-library'
}

group 'org.harrismusic'
version '0.1-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    withSourcesJar()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom:2.2.10')
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation platform('io.kotest:kotest-bom:6.0.1')
    testImplementation 'io.kotest:kotest-runner-junit4'
    testImplementation 'io.kotest:kotest-assertions-core'
    testImplementation 'io.kotest:kotest-property'
    testImplementation "com.natpryce:hamkrest:1.8.0.1"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "pl.pragmatists:JUnitParams:1.1.1"
}

compileJava {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

compileTestJava {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += [
            "-Xjsr305=strict",
            "-opt-in=kotlin.RequiresOptIn",
            "-Xjvm-default=all"
        ]
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = 17
}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    events "skipped", "failed"
    showStandardStreams true
  }
}

test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.harrismusic'
            artifactId = 'library'
            version = '1.0.2'

            from components.java

            pom {
                name = 'Harris Music Library'
                description = 'A library for working with music theory concepts in Kotlin'
                url = 'https://github.com/pedromsantos/harrismusic'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'pedromsantos'
                        name = 'Pedro Santos'
                        email = 'pedro@mariodelrio.com'
                    }
                }
            }
        }
    }
}